[{"/Users/wangxinbo/Desktop/codeParse/react-project/src/index.js":"1","/Users/wangxinbo/Desktop/codeParse/react-project/src/components/InputNumber.js":"2","/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Triangle.js":"3","/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Arrow.js":"4","/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Tree.js":"5","/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Dropdown.js":"6","/Users/wangxinbo/Desktop/codeParse/react-project/src/utils.js":"7","/Users/wangxinbo/Desktop/codeParse/react-project/src/App.js":"8","/Users/wangxinbo/Desktop/codeParse/react-project/src/ThreeOperation/ThreeOperation.js":"9","/Users/wangxinbo/Desktop/codeParse/react-project/src/404.js":"10","/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Sidebar.js":"11","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/ComponentsTest.js":"12","/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/Arrow.js":"13","/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/Triangle.js":"14","/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/Dropdown.js":"15","/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/InputNumber.js":"16","/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/Tree.js":"17","/Users/wangxinbo/Desktop/codeParse/react-project/src/Blog/SourceCode.js":"18","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/dvaTest.js":"19","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/DvaTest.js":"20","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/RichTextBoxTest.js":"21","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/JsCodeToSvgFlowchart.js":"22","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/Js2flowchart.js":"23","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/constants.js":"24","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/FlowTreeBuilder.js":"25","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/presentation-generator/PresentationGenerator.js":"26","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/SVGRender.js":"27","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/abstractionLevelsConfigurator.js":"28","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/entryDefinitionsMap.js":"29","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/astBuilder.js":"30","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/FlowTreeModifier.js":"31","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/svgObjectsBuilder.js":"32","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/modifiers/modifiersFactory.js":"33","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/StyleThemeFactory.js":"34","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/astParserConfig.js":"35","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/abstraction-levels/functionDependencies.js":"36","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/converters/core.js":"37","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/abstraction-levels/functions.js":"38","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/converters/Harmony.js":"39","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapesFactory.js":"40","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/SVGBase.js":"41","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/themes/Blurred.js":"42","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/themes/DefaultBaseTheme.js":"43","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/themes/Light.js":"44","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/themes/BlackAndWhite.js":"45","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapesDefinitionsMap.js":"46","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/connections/ConnectionArrow.js":"47","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ConditionRhombus.js":"48","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/RootCircle.js":"49","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/Rectangle.js":"50","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/LoopRhombus.js":"51","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/VerticalEdgedRectangle.js":"52","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ReturnStatement.js":"53","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/DestructedNode.js":"54","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ImportDeclaration.js":"55","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ExportDeclaration.js":"56","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/CatchClause.js":"57","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ThrowStatement.js":"58","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/SwitchStatement.js":"59","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/TryStatement.js":"60","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ContinueStatement.js":"61","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/SwitchCase.js":"62","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/BreakStatement.js":"63","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ImportSpecifier.js":"64","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ObjectProperty.js":"65","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/CallExpression.js":"66","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ClassDeclaration.js":"67","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/DebuggerStatement.js":"68","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/BaseShape.js":"69","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/Rhombus.js":"70","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/TextContentConfigurator.js":"71","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/logger.js":"72","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/treeLevelsPointer.js":"73","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/composition.js":"74","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/traversalWithTreeLevelsPointer.js":"75","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/traversal.js":"76","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/svgPrimitives.js":"77","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/geometry.js":"78","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/iteratorBuilder.js":"79","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/flatten.js":"80","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/string.js":"81","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParser.copy.js":"82","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/BabelParserCopy.js":"83","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ScopeHandler.js":"84","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ProductionParameterHandler.js":"85","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/StatementParser.js":"86","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ExpressionScopeHandler.js":"87","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/State.js":"88","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/Parameter.js":"89","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/ExpressionParser.js":"90","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/LValParser.js":"91","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ErrorMessages.js":"92","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/types.js":"93","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ExpressionErrors.js":"94","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ExpressionScope.js":"95","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/types$1.js":"96","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/NodeUtils.js":"97","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/UtilParser.js":"98","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/Tokenizer.js":"99","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/CommentsParser.js":"100","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/TokenType.js":"101","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/TokContext.js":"102","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/Node.js":"103"},{"size":1031,"mtime":1612360932407,"results":"104","hashOfConfig":"105"},{"size":2242,"mtime":1608978416216,"results":"106","hashOfConfig":"107"},{"size":1299,"mtime":1607934855187,"results":"108","hashOfConfig":"107"},{"size":787,"mtime":1607934868048,"results":"109","hashOfConfig":"107"},{"size":4735,"mtime":1608216994659,"results":"110","hashOfConfig":"107"},{"size":1146,"mtime":1607934863981,"results":"111","hashOfConfig":"107"},{"size":5349,"mtime":1612407367848,"results":"112","hashOfConfig":"105"},{"size":1638,"mtime":1609059029013,"results":"113","hashOfConfig":"105"},{"size":200,"mtime":1612360967594,"results":"114","hashOfConfig":"105"},{"size":230,"mtime":1608516461920,"results":"115","hashOfConfig":"105"},{"size":376,"mtime":1608977658554,"results":"116","hashOfConfig":"107"},{"size":2404,"mtime":1613144024150,"results":"117","hashOfConfig":"105"},{"size":787,"mtime":1609050669516,"results":"118","hashOfConfig":"105"},{"size":1299,"mtime":1607934855187,"results":"119","hashOfConfig":"105"},{"size":1146,"mtime":1609061878179,"results":"120","hashOfConfig":"105"},{"size":2910,"mtime":1609059039691,"results":"121","hashOfConfig":"105"},{"size":4741,"mtime":1611942322491,"results":"122","hashOfConfig":"105"},{"size":160,"mtime":1609063627134,"results":"123","hashOfConfig":"107"},{"size":909,"mtime":1609050827278,"results":"124","hashOfConfig":"107"},{"size":102,"mtime":1609059041355,"results":"125","hashOfConfig":"107"},{"size":6046,"mtime":1612099764894,"results":"126","hashOfConfig":"105"},{"size":37830,"mtime":1613223448784,"results":"127","hashOfConfig":"105"},{"size":1382,"mtime":1613023412261,"results":"128","hashOfConfig":"105"},{"size":2703,"mtime":1612188348961,"results":"129","hashOfConfig":"105"},{"size":3092,"mtime":1613024540126,"results":"130","hashOfConfig":"105"},{"size":1765,"mtime":1612708810433,"results":"131","hashOfConfig":"105"},{"size":4717,"mtime":1612709012694,"results":"132","hashOfConfig":"105"},{"size":1397,"mtime":1612706523404,"results":"133","hashOfConfig":"105"},{"size":10599,"mtime":1612701687318,"results":"134","hashOfConfig":"105"},{"size":3735,"mtime":1613221390593,"results":"135","hashOfConfig":"105"},{"size":1629,"mtime":1612706401337,"results":"136","hashOfConfig":"105"},{"size":5936,"mtime":1612711965052,"results":"137","hashOfConfig":"105"},{"size":2591,"mtime":1612707004931,"results":"138","hashOfConfig":"105"},{"size":1261,"mtime":1612702644310,"results":"139","hashOfConfig":"105"},{"size":310,"mtime":1612777115010,"results":"140","hashOfConfig":"105"},{"size":1361,"mtime":1612701267997,"results":"141","hashOfConfig":"105"},{"size":9105,"mtime":1612706917251,"results":"142","hashOfConfig":"105"},{"size":983,"mtime":1612701663237,"results":"143","hashOfConfig":"105"},{"size":1582,"mtime":1612701755022,"results":"144","hashOfConfig":"105"},{"size":2917,"mtime":1612714394175,"results":"145","hashOfConfig":"105"},{"size":1635,"mtime":1612702705445,"results":"146","hashOfConfig":"105"},{"size":717,"mtime":1612188348951,"results":"147","hashOfConfig":"105"},{"size":7110,"mtime":1612188348951,"results":"148","hashOfConfig":"105"},{"size":717,"mtime":1612188348952,"results":"149","hashOfConfig":"105"},{"size":306,"mtime":1612188348951,"results":"150","hashOfConfig":"105"},{"size":2967,"mtime":1612702186229,"results":"151","hashOfConfig":"105"},{"size":2702,"mtime":1612709108210,"results":"152","hashOfConfig":"105"},{"size":4250,"mtime":1612702554684,"results":"153","hashOfConfig":"105"},{"size":1497,"mtime":1612702612824,"results":"154","hashOfConfig":"105"},{"size":1433,"mtime":1612702598155,"results":"155","hashOfConfig":"105"},{"size":3262,"mtime":1612702591861,"results":"156","hashOfConfig":"105"},{"size":1843,"mtime":1612702622096,"results":"157","hashOfConfig":"105"},{"size":3014,"mtime":1612702604950,"results":"158","hashOfConfig":"105"},{"size":2282,"mtime":1612709352237,"results":"159","hashOfConfig":"105"},{"size":232,"mtime":1612188348955,"results":"160","hashOfConfig":"105"},{"size":211,"mtime":1612188348955,"results":"161","hashOfConfig":"105"},{"size":205,"mtime":1612188348953,"results":"162","hashOfConfig":"105"},{"size":190,"mtime":1612188348958,"results":"163","hashOfConfig":"105"},{"size":212,"mtime":1612188348958,"results":"164","hashOfConfig":"105"},{"size":188,"mtime":1612188348958,"results":"165","hashOfConfig":"105"},{"size":211,"mtime":1612188348954,"results":"166","hashOfConfig":"105"},{"size":186,"mtime":1612188348957,"results":"167","hashOfConfig":"105"},{"size":208,"mtime":1612188348953,"results":"168","hashOfConfig":"105"},{"size":191,"mtime":1612188348956,"results":"169","hashOfConfig":"105"},{"size":190,"mtime":1612188348956,"results":"170","hashOfConfig":"105"},{"size":190,"mtime":1612188348953,"results":"171","hashOfConfig":"105"},{"size":231,"mtime":1612188348954,"results":"172","hashOfConfig":"105"},{"size":193,"mtime":1612188348954,"results":"173","hashOfConfig":"105"},{"size":7343,"mtime":1612702850106,"results":"174","hashOfConfig":"105"},{"size":755,"mtime":1612188348957,"results":"175","hashOfConfig":"105"},{"size":376,"mtime":1612702648608,"results":"176","hashOfConfig":"105"},{"size":68,"mtime":1612188348962,"results":"177","hashOfConfig":"105"},{"size":295,"mtime":1612188348964,"results":"178","hashOfConfig":"105"},{"size":273,"mtime":1612188348961,"results":"179","hashOfConfig":"105"},{"size":726,"mtime":1612188348963,"results":"180","hashOfConfig":"105"},{"size":871,"mtime":1612188348963,"results":"181","hashOfConfig":"105"},{"size":4117,"mtime":1612188348963,"results":"182","hashOfConfig":"105"},{"size":856,"mtime":1612188348962,"results":"183","hashOfConfig":"105"},{"size":160,"mtime":1612188348962,"results":"184","hashOfConfig":"105"},{"size":363,"mtime":1612188348962,"results":"185","hashOfConfig":"105"},{"size":1878,"mtime":1612713325192,"results":"186","hashOfConfig":"105"},{"size":411538,"mtime":1613200177784,"results":"187","hashOfConfig":"105"},{"size":2082,"mtime":1613297456604,"results":"188","hashOfConfig":"105"},{"size":3308,"mtime":1613287881233,"results":"189","hashOfConfig":"105"},{"size":337,"mtime":1613287963063,"results":"190","hashOfConfig":"105"},{"size":9332,"mtime":1613285449770,"results":"191","hashOfConfig":"105"},{"size":262,"mtime":1613288020548,"results":"192","hashOfConfig":"105"},{"size":1786,"mtime":1613304257040,"results":"193","hashOfConfig":"105"},{"size":14476,"mtime":1613304209047,"results":"194","hashOfConfig":"105"},{"size":18914,"mtime":1613285460544,"results":"195","hashOfConfig":"105"},{"size":3242,"mtime":1613297518849,"results":"196","hashOfConfig":"105"},{"size":12292,"mtime":1613136958748,"results":"197","hashOfConfig":"105"},{"size":5245,"mtime":1613143662600,"results":"198","hashOfConfig":"105"},{"size":122,"mtime":1613137418265,"results":"199","hashOfConfig":"105"},{"size":509,"mtime":1613288086761,"results":"200","hashOfConfig":"105"},{"size":704,"mtime":1613141883394,"results":"201","hashOfConfig":"105"},{"size":656,"mtime":1613285713760,"results":"202","hashOfConfig":"105"},{"size":1212,"mtime":1613286080105,"results":"203","hashOfConfig":"105"},{"size":14187,"mtime":1613303857359,"results":"204","hashOfConfig":"105"},{"size":4525,"mtime":1613297473604,"results":"205","hashOfConfig":"105"},{"size":804,"mtime":1613141536219,"results":"206","hashOfConfig":"105"},{"size":334,"mtime":1613141886227,"results":"207","hashOfConfig":"105"},{"size":630,"mtime":1613287974287,"results":"208","hashOfConfig":"105"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},"188gq72",{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wpv9tt",{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"211"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"211"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":104,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"211"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"211"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"211"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"211"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"211"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"211"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"211"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"211"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"211"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"211"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},"/Users/wangxinbo/Desktop/codeParse/react-project/src/index.js",[],["429","430"],"/Users/wangxinbo/Desktop/codeParse/react-project/src/components/InputNumber.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Triangle.js",[],["431","432"],"/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Arrow.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Tree.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Dropdown.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/utils.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/App.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/ThreeOperation/ThreeOperation.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/404.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/components/Sidebar.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/ComponentsTest.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/Arrow.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/Triangle.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/Dropdown.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/InputNumber.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Components/Tree.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Blog/SourceCode.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/dvaTest.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/DvaTest.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/RichTextBoxTest.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/JsCodeToSvgFlowchart.js",["433","434","435","436","437","438","439","440","441","442","443"],"import React from 'react'\n// import * as babelParser from '@babel/parser';\nimport { convertCodeToSvg } from './Js2flowchart/Js2flowchart.js';\n\nconst code = `\n\t(function (global, factory) {\n\t\t\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\t\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.TWEEN = {}));\n\t}(this, (function (exports) {\n\t\t'use strict';\n\t\t\t/**\n\t\t\t * The Ease class provides a collection of easing functions for use with tween.js.\n\t\t\t */\n\t\t\tvar Easing = {\n\t\t\t\t\tLinear: {\n\t\t\t\t\t\t\tNone: function (amount) {\n\t\t\t\t\t\t\t\t\treturn amount;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tQuadratic: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\treturn amount * amount;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\treturn amount * (2 - amount);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0.5 * amount * amount;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn -0.5 * (--amount * (amount - 2) - 1);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tCubic: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\treturn amount * amount * amount;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\treturn --amount * amount * amount + 1;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0.5 * amount * amount * amount;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn 0.5 * ((amount -= 2) * amount * amount + 2);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tQuartic: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\treturn amount * amount * amount * amount;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\treturn 1 - --amount * amount * amount * amount;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0.5 * amount * amount * amount * amount;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn -0.5 * ((amount -= 2) * amount * amount * amount - 2);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tQuintic: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\treturn amount * amount * amount * amount * amount;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\treturn --amount * amount * amount * amount * amount + 1;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0.5 * amount * amount * amount * amount * amount;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn 0.5 * ((amount -= 2) * amount * amount * amount * amount + 2);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tSinusoidal: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\treturn 1 - Math.cos((amount * Math.PI) / 2);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\treturn Math.sin((amount * Math.PI) / 2);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * amount));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tExponential: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\treturn amount === 0 ? 0 : Math.pow(1024, amount - 1);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\treturn amount === 1 ? 1 : 1 - Math.pow(2, -10 * amount);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif (amount === 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (amount === 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0.5 * Math.pow(1024, amount - 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn 0.5 * (-Math.pow(2, -10 * (amount - 1)) + 2);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tCircular: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\treturn 1 - Math.sqrt(1 - amount * amount);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\treturn Math.sqrt(1 - --amount * amount);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn -0.5 * (Math.sqrt(1 - amount * amount) - 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn 0.5 * (Math.sqrt(1 - (amount -= 2) * amount) + 1);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tElastic: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\tif (amount === 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (amount === 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn -Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif (amount === 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (amount === 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn Math.pow(2, -10 * amount) * Math.sin((amount - 0.1) * 5 * Math.PI) + 1;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif (amount === 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (amount === 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tamount *= 2;\n\t\t\t\t\t\t\t\t\tif (amount < 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn -0.5 * Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn 0.5 * Math.pow(2, -10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI) + 1;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tBack: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\tvar s = 1.70158;\n\t\t\t\t\t\t\t\t\treturn amount * amount * ((s + 1) * amount - s);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\tvar s = 1.70158;\n\t\t\t\t\t\t\t\t\treturn --amount * amount * ((s + 1) * amount + s) + 1;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\tvar s = 1.70158 * 1.525;\n\t\t\t\t\t\t\t\t\tif ((amount *= 2) < 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn 0.5 * (amount * amount * ((s + 1) * amount - s));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn 0.5 * ((amount -= 2) * amount * ((s + 1) * amount + s) + 2);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tBounce: {\n\t\t\t\t\t\t\tIn: function (amount) {\n\t\t\t\t\t\t\t\t\treturn 1 - Easing.Bounce.Out(1 - amount);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif (amount < 1 / 2.75) {\n\t\t\t\t\t\t\t\t\t\t\treturn 7.5625 * amount * amount;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (amount < 2 / 2.75) {\n\t\t\t\t\t\t\t\t\t\t\treturn 7.5625 * (amount -= 1.5 / 2.75) * amount + 0.75;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (amount < 2.5 / 2.75) {\n\t\t\t\t\t\t\t\t\t\t\treturn 7.5625 * (amount -= 2.25 / 2.75) * amount + 0.9375;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\treturn 7.5625 * (amount -= 2.625 / 2.75) * amount + 0.984375;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInOut: function (amount) {\n\t\t\t\t\t\t\t\t\tif (amount < 0.5) {\n\t\t\t\t\t\t\t\t\t\t\treturn Easing.Bounce.In(amount * 2) * 0.5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn Easing.Bounce.Out(amount * 2 - 1) * 0.5 + 0.5;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t};\n\n\t\t\tvar now;\n\t\t\t// Include a performance.now polyfill.\n\t\t\t// In node.js, use process.hrtime.\n\t\t\t// eslint-disable-next-line\n\t\t\t// @ts-ignore\n\t\t\tif (typeof self === 'undefined' && typeof process !== 'undefined' && process.hrtime) {\n\t\t\t\t\tnow = function () {\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tvar time = process.hrtime();\n\t\t\t\t\t\t\t// Convert [seconds, nanoseconds] to milliseconds.\n\t\t\t\t\t\t\treturn time[0] * 1000 + time[1] / 1000000;\n\t\t\t\t\t};\n\t\t\t}\n\t\t\t// In a browser, use self.performance.now if it is available.\n\t\t\telse if (typeof self !== 'undefined' && self.performance !== undefined && self.performance.now !== undefined) {\n\t\t\t\t\t// This must be bound, because directly assigning this function\n\t\t\t\t\t// leads to an invocation exception in Chrome.\n\t\t\t\t\tnow = self.performance.now.bind(self.performance);\n\t\t\t}\n\t\t\t// Use Date.now if it is available.\n\t\t\telse if (Date.now !== undefined) {\n\t\t\t\t\tnow = Date.now;\n\t\t\t}\n\t\t\t// Otherwise, use 'new Date().getTime()'.\n\t\t\telse {\n\t\t\t\t\tnow = function () {\n\t\t\t\t\t\t\treturn new Date().getTime();\n\t\t\t\t\t};\n\t\t\t}\n\t\t\tvar now$1 = now;\n\n\t\t\t/**\n\t\t\t * Controlling groups of tweens\n\t\t\t *\n\t\t\t * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n\t\t\t * In these cases, you may want to create your own smaller groups of tween\n\t\t\t */\n\t\t\tvar Group = /** @class */ (function () {\n\t\t\t\t\tfunction Group() {\n\t\t\t\t\t\t\tthis._tweens = {};\n\t\t\t\t\t\t\tthis._tweensAddedDuringUpdate = {};\n\t\t\t\t\t}\n\t\t\t\t\tGroup.prototype.getAll = function () {\n\t\t\t\t\t\t\tvar _this = this;\n\t\t\t\t\t\t\treturn Object.keys(this._tweens).map(function (tweenId) {\n\t\t\t\t\t\t\t\t\treturn _this._tweens[tweenId];\n\t\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\tGroup.prototype.removeAll = function () {\n\t\t\t\t\t\t\tthis._tweens = {};\n\t\t\t\t\t};\n\t\t\t\t\tGroup.prototype.add = function (tween) {\n\t\t\t\t\t\t\tthis._tweens[tween.getId()] = tween;\n\t\t\t\t\t\t\tthis._tweensAddedDuringUpdate[tween.getId()] = tween;\n\t\t\t\t\t};\n\t\t\t\t\tGroup.prototype.remove = function (tween) {\n\t\t\t\t\t\t\tdelete this._tweens[tween.getId()];\n\t\t\t\t\t\t\tdelete this._tweensAddedDuringUpdate[tween.getId()];\n\t\t\t\t\t};\n\t\t\t\t\tGroup.prototype.update = function (time, preserve) {\n\t\t\t\t\t\t\tif (time === void 0) { time = now$1(); }\n\t\t\t\t\t\t\tif (preserve === void 0) { preserve = false; }\n\t\t\t\t\t\t\tvar tweenIds = Object.keys(this._tweens);\n\t\t\t\t\t\t\tif (tweenIds.length === 0) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Tweens are updated in \"batches\". If you add a new tween during an\n\t\t\t\t\t\t\t// update, then the new tween will be updated in the next batch.\n\t\t\t\t\t\t\t// If you remove a tween during an update, it may or may not be updated.\n\t\t\t\t\t\t\t// However, if the removed tween was added during the current batch,\n\t\t\t\t\t\t\t// then it will not be updated.\n\t\t\t\t\t\t\twhile (tweenIds.length > 0) {\n\t\t\t\t\t\t\t\t\tthis._tweensAddedDuringUpdate = {};\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < tweenIds.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tvar tween = this._tweens[tweenIds[i]];\n\t\t\t\t\t\t\t\t\t\t\tvar autoStart = !preserve;\n\t\t\t\t\t\t\t\t\t\t\tif (tween && tween.update(time, autoStart) === false && !preserve) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tdelete this._tweens[tweenIds[i]];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttweenIds = Object.keys(this._tweensAddedDuringUpdate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\t\t\t\t\treturn Group;\n\t\t\t}());\n\n\t\t\t/**\n\t\t\t *\n\t\t\t */\n\t\t\tvar Interpolation = {\n\t\t\t\t\tLinear: function (v, k) {\n\t\t\t\t\t\t\tvar m = v.length - 1;\n\t\t\t\t\t\t\tvar f = m * k;\n\t\t\t\t\t\t\tvar i = Math.floor(f);\n\t\t\t\t\t\t\tvar fn = Interpolation.Utils.Linear;\n\t\t\t\t\t\t\tif (k < 0) {\n\t\t\t\t\t\t\t\t\treturn fn(v[0], v[1], f);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (k > 1) {\n\t\t\t\t\t\t\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\t\t\t\t\t},\n\t\t\t\t\tBezier: function (v, k) {\n\t\t\t\t\t\t\tvar b = 0;\n\t\t\t\t\t\t\tvar n = v.length - 1;\n\t\t\t\t\t\t\tvar pw = Math.pow;\n\t\t\t\t\t\t\tvar bn = Interpolation.Utils.Bernstein;\n\t\t\t\t\t\t\tfor (var i = 0; i <= n; i++) {\n\t\t\t\t\t\t\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn b;\n\t\t\t\t\t},\n\t\t\t\t\tCatmullRom: function (v, k) {\n\t\t\t\t\t\t\tvar m = v.length - 1;\n\t\t\t\t\t\t\tvar f = m * k;\n\t\t\t\t\t\t\tvar i = Math.floor(f);\n\t\t\t\t\t\t\tvar fn = Interpolation.Utils.CatmullRom;\n\t\t\t\t\t\t\tif (v[0] === v[m]) {\n\t\t\t\t\t\t\t\t\tif (k < 0) {\n\t\t\t\t\t\t\t\t\t\t\ti = Math.floor((f = m * (1 + k)));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif (k < 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (k > 1) {\n\t\t\t\t\t\t\t\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tUtils: {\n\t\t\t\t\t\t\tLinear: function (p0, p1, t) {\n\t\t\t\t\t\t\t\t\treturn (p1 - p0) * t + p0;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tBernstein: function (n, i) {\n\t\t\t\t\t\t\t\t\tvar fc = Interpolation.Utils.Factorial;\n\t\t\t\t\t\t\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tFactorial: (function () {\n\t\t\t\t\t\t\t\t\tvar a = [1];\n\t\t\t\t\t\t\t\t\treturn function (n) {\n\t\t\t\t\t\t\t\t\t\t\tvar s = 1;\n\t\t\t\t\t\t\t\t\t\t\tif (a[n]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn a[n];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ts *= i;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ta[n] = s;\n\t\t\t\t\t\t\t\t\t\t\treturn s;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t})(),\n\t\t\t\t\t\t\tCatmullRom: function (p0, p1, p2, p3, t) {\n\t\t\t\t\t\t\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\t\t\t\t\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\t\t\t\t\t\t\tvar t2 = t * t;\n\t\t\t\t\t\t\t\t\tvar t3 = t * t2;\n\t\t\t\t\t\t\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Utils\n\t\t\t */\n\t\t\tvar Sequence = /** @class */ (function () {\n\t\t\t\t\tfunction Sequence() {\n\t\t\t\t\t}\n\t\t\t\t\tSequence.nextId = function () {\n\t\t\t\t\t\t\treturn Sequence._nextId++;\n\t\t\t\t\t};\n\t\t\t\t\tSequence._nextId = 0;\n\t\t\t\t\treturn Sequence;\n\t\t\t}());\n\n\t\t\tvar mainGroup = new Group();\n\n\t\t\t/**\n\t\t\t * Tween.js - Licensed under the MIT license\n\t\t\t * https://github.com/tweenjs/tween.js\n\t\t\t * ----------------------------------------------\n\t\t\t *\n\t\t\t * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n\t\t\t * Thank you all, you're awesome!\n\t\t\t */\n\t\t\tvar Tween = /** @class */ (function () {\n\t\t\t\t\tfunction Tween(_object, _group) {\n\t\t\t\t\t\t\tif (_group === void 0) { _group = mainGroup; }\n\t\t\t\t\t\t\tthis._object = _object;\n\t\t\t\t\t\t\tthis._group = _group;\n\t\t\t\t\t\t\tthis._isPaused = false;\n\t\t\t\t\t\t\tthis._pauseStart = 0;\n\t\t\t\t\t\t\tthis._valuesStart = {};\n\t\t\t\t\t\t\tthis._valuesEnd = {};\n\t\t\t\t\t\t\tthis._valuesStartRepeat = {};\n\t\t\t\t\t\t\tthis._duration = 1000;\n\t\t\t\t\t\t\tthis._initialRepeat = 0;\n\t\t\t\t\t\t\tthis._repeat = 0;\n\t\t\t\t\t\t\tthis._yoyo = false;\n\t\t\t\t\t\t\tthis._isPlaying = false;\n\t\t\t\t\t\t\tthis._reversed = false;\n\t\t\t\t\t\t\tthis._delayTime = 0;\n\t\t\t\t\t\t\tthis._startTime = 0;\n\t\t\t\t\t\t\tthis._easingFunction = Easing.Linear.None;\n\t\t\t\t\t\t\tthis._interpolationFunction = Interpolation.Linear;\n\t\t\t\t\t\t\tthis._chainedTweens = [];\n\t\t\t\t\t\t\tthis._onStartCallbackFired = false;\n\t\t\t\t\t\t\tthis._id = Sequence.nextId();\n\t\t\t\t\t\t\tthis._isChainStopped = false;\n\t\t\t\t\t\t\tthis._goToEnd = false;\n\t\t\t\t\t}\n\t\t\t\t\tTween.prototype.getId = function () {\n\t\t\t\t\t\t\treturn this._id;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.isPlaying = function () {\n\t\t\t\t\t\t\treturn this._isPlaying;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.isPaused = function () {\n\t\t\t\t\t\t\treturn this._isPaused;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.to = function (properties, duration) {\n\t\t\t\t\t\t\t// TODO? restore this, then update the 07_dynamic_to example to set fox\n\t\t\t\t\t\t\t// tween's to on each update. That way the behavior is opt-in (there's\n\t\t\t\t\t\t\t// currently no opt-out).\n\t\t\t\t\t\t\t// for (const prop in properties) this._valuesEnd[prop] = properties[prop]\n\t\t\t\t\t\t\tthis._valuesEnd = Object.create(properties);\n\t\t\t\t\t\t\tif (duration !== undefined) {\n\t\t\t\t\t\t\t\t\tthis._duration = duration;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.duration = function (d) {\n\t\t\t\t\t\t\tthis._duration = d;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.start = function (time) {\n\t\t\t\t\t\t\tif (this._isPlaying) {\n\t\t\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tthis._group && this._group.add(this);\n\t\t\t\t\t\t\tthis._repeat = this._initialRepeat;\n\t\t\t\t\t\t\tif (this._reversed) {\n\t\t\t\t\t\t\t\t\t// If we were reversed (f.e. using the yoyo feature) then we need to\n\t\t\t\t\t\t\t\t\t// flip the tween direction back to forward.\n\t\t\t\t\t\t\t\t\tthis._reversed = false;\n\t\t\t\t\t\t\t\t\tfor (var property in this._valuesStartRepeat) {\n\t\t\t\t\t\t\t\t\t\t\tthis._swapEndStartRepeatValues(property);\n\t\t\t\t\t\t\t\t\t\t\tthis._valuesStart[property] = this._valuesStartRepeat[property];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._isPlaying = true;\n\t\t\t\t\t\t\tthis._isPaused = false;\n\t\t\t\t\t\t\tthis._onStartCallbackFired = false;\n\t\t\t\t\t\t\tthis._isChainStopped = false;\n\t\t\t\t\t\t\tthis._startTime = time !== undefined ? (typeof time === 'string' ? now$1() + parseFloat(time) : time) : now$1();\n\t\t\t\t\t\t\tthis._startTime += this._delayTime;\n\t\t\t\t\t\t\tthis._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype._setupProperties = function (_object, _valuesStart, _valuesEnd, _valuesStartRepeat) {\n\t\t\t\t\t\t\tfor (var property in _valuesEnd) {\n\t\t\t\t\t\t\t\t\tvar startValue = _object[property];\n\t\t\t\t\t\t\t\t\tvar startValueIsArray = Array.isArray(startValue);\n\t\t\t\t\t\t\t\t\tvar propType = startValueIsArray ? 'array' : typeof startValue;\n\t\t\t\t\t\t\t\t\tvar isInterpolationList = !startValueIsArray && Array.isArray(_valuesEnd[property]);\n\t\t\t\t\t\t\t\t\tif (propType === 'undefined' || propType === 'function') {\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Check if an Array was provided as property value\n\t\t\t\t\t\t\t\t\tif (isInterpolationList) {\n\t\t\t\t\t\t\t\t\t\t\tvar endValues = _valuesEnd[property];\n\t\t\t\t\t\t\t\t\t\t\tif (endValues.length === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t// handle an array of relative values\n\t\t\t\t\t\t\t\t\t\t\tendValues = endValues.map(this._handleRelativeValue.bind(this, startValue));\n\t\t\t\t\t\t\t\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\t\t\t\t\t\t\t\t_valuesEnd[property] = [startValue].concat(endValues);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// handle the deepness of the values\n\t\t\t\t\t\t\t\t\tif ((propType === 'object' || startValueIsArray) && startValue && !isInterpolationList) {\n\t\t\t\t\t\t\t\t\t\t\t_valuesStart[property] = startValueIsArray ? [] : {};\n\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\tfor (var prop in startValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore FIXME?\n\t\t\t\t\t\t\t\t\t\t\t\t\t_valuesStart[property][prop] = startValue[prop];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t_valuesStartRepeat[property] = startValueIsArray ? [] : {}; // TODO? repeat nested values? And yoyo? And array values?\n\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore FIXME?\n\t\t\t\t\t\t\t\t\t\t\tthis._setupProperties(startValue, _valuesStart[property], _valuesEnd[property], _valuesStartRepeat[property]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t// Save the starting value, but only once.\n\t\t\t\t\t\t\t\t\t\t\tif (typeof _valuesStart[property] === 'undefined') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t_valuesStart[property] = startValue;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (!startValueIsArray) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore FIXME?\n\t\t\t\t\t\t\t\t\t\t\t\t\t_valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (isInterpolationList) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore FIXME?\n\t\t\t\t\t\t\t\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesEnd[property].slice().reverse();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesStart[property] || 0;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.stop = function () {\n\t\t\t\t\t\t\tif (!this._isChainStopped) {\n\t\t\t\t\t\t\t\t\tthis._isChainStopped = true;\n\t\t\t\t\t\t\t\t\tthis.stopChainedTweens();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!this._isPlaying) {\n\t\t\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tthis._group && this._group.remove(this);\n\t\t\t\t\t\t\tthis._isPlaying = false;\n\t\t\t\t\t\t\tthis._isPaused = false;\n\t\t\t\t\t\t\tif (this._onStopCallback) {\n\t\t\t\t\t\t\t\t\tthis._onStopCallback(this._object);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.end = function () {\n\t\t\t\t\t\t\tthis._goToEnd = true;\n\t\t\t\t\t\t\tthis.update(Infinity);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.pause = function (time) {\n\t\t\t\t\t\t\tif (time === void 0) { time = now$1(); }\n\t\t\t\t\t\t\tif (this._isPaused || !this._isPlaying) {\n\t\t\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._isPaused = true;\n\t\t\t\t\t\t\tthis._pauseStart = time;\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tthis._group && this._group.remove(this);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.resume = function (time) {\n\t\t\t\t\t\t\tif (time === void 0) { time = now$1(); }\n\t\t\t\t\t\t\tif (!this._isPaused || !this._isPlaying) {\n\t\t\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._isPaused = false;\n\t\t\t\t\t\t\tthis._startTime += time - this._pauseStart;\n\t\t\t\t\t\t\tthis._pauseStart = 0;\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tthis._group && this._group.add(this);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.stopChainedTweens = function () {\n\t\t\t\t\t\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t\t\t\t\tthis._chainedTweens[i].stop();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.group = function (group) {\n\t\t\t\t\t\t\tthis._group = group;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.delay = function (amount) {\n\t\t\t\t\t\t\tthis._delayTime = amount;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.repeat = function (times) {\n\t\t\t\t\t\t\tthis._initialRepeat = times;\n\t\t\t\t\t\t\tthis._repeat = times;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.repeatDelay = function (amount) {\n\t\t\t\t\t\t\tthis._repeatDelayTime = amount;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.yoyo = function (yoyo) {\n\t\t\t\t\t\t\tthis._yoyo = yoyo;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.easing = function (easingFunction) {\n\t\t\t\t\t\t\tthis._easingFunction = easingFunction;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.interpolation = function (interpolationFunction) {\n\t\t\t\t\t\t\tthis._interpolationFunction = interpolationFunction;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.chain = function () {\n\t\t\t\t\t\t\tvar tweens = [];\n\t\t\t\t\t\t\tfor (var _i = 0; _i < arguments.length; _i++) {\n\t\t\t\t\t\t\t\t\ttweens[_i] = arguments[_i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._chainedTweens = tweens;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.onStart = function (callback) {\n\t\t\t\t\t\t\tthis._onStartCallback = callback;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.onUpdate = function (callback) {\n\t\t\t\t\t\t\tthis._onUpdateCallback = callback;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.onRepeat = function (callback) {\n\t\t\t\t\t\t\tthis._onRepeatCallback = callback;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.onComplete = function (callback) {\n\t\t\t\t\t\t\tthis._onCompleteCallback = callback;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype.onStop = function (callback) {\n\t\t\t\t\t\t\tthis._onStopCallback = callback;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t};\n\t\t\t\t\t/**\n\t\t\t\t\t * @returns true if the tween is still playing after the update, false\n\t\t\t\t\t * otherwise (calling update on a paused tween still returns true because\n\t\t\t\t\t * it is still playing, just paused).\n\t\t\t\t\t */\n\t\t\t\t\tTween.prototype.update = function (time, autoStart) {\n\t\t\t\t\t\t\tif (time === void 0) { time = now$1(); }\n\t\t\t\t\t\t\tif (autoStart === void 0) { autoStart = true; }\n\t\t\t\t\t\t\tif (this._isPaused)\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\tvar property;\n\t\t\t\t\t\t\tvar elapsed;\n\t\t\t\t\t\t\tvar endTime = this._startTime + this._duration;\n\t\t\t\t\t\t\tif (!this._goToEnd && !this._isPlaying) {\n\t\t\t\t\t\t\t\t\tif (time > endTime)\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\tif (autoStart)\n\t\t\t\t\t\t\t\t\t\t\tthis.start(time);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._goToEnd = false;\n\t\t\t\t\t\t\tif (time < this._startTime) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (this._onStartCallbackFired === false) {\n\t\t\t\t\t\t\t\t\tif (this._onStartCallback) {\n\t\t\t\t\t\t\t\t\t\t\tthis._onStartCallback(this._object);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._onStartCallbackFired = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telapsed = (time - this._startTime) / this._duration;\n\t\t\t\t\t\t\telapsed = this._duration === 0 || elapsed > 1 ? 1 : elapsed;\n\t\t\t\t\t\t\tvar value = this._easingFunction(elapsed);\n\t\t\t\t\t\t\t// properties transformations\n\t\t\t\t\t\t\tthis._updateProperties(this._object, this._valuesStart, this._valuesEnd, value);\n\t\t\t\t\t\t\tif (this._onUpdateCallback) {\n\t\t\t\t\t\t\t\t\tthis._onUpdateCallback(this._object, elapsed);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (elapsed === 1) {\n\t\t\t\t\t\t\t\t\tif (this._repeat > 0) {\n\t\t\t\t\t\t\t\t\t\t\tif (isFinite(this._repeat)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._repeat--;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\t\t\t\t\t\t\t\tfor (property in this._valuesStartRepeat) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!this._yoyo && typeof this._valuesEnd[property] === 'string') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis._valuesStartRepeat[property] =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore FIXME?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (this._yoyo) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis._swapEndStartRepeatValues(property);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._valuesStart[property] = this._valuesStartRepeat[property];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (this._yoyo) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._reversed = !this._reversed;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (this._repeatDelayTime !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._startTime = time + this._repeatDelayTime;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._startTime = time + this._delayTime;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (this._onRepeatCallback) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._onRepeatCallback(this._object);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tif (this._onCompleteCallback) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._onCompleteCallback(this._object);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis._chainedTweens[i].start(this._startTime + this._duration);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis._isPlaying = false;\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype._updateProperties = function (_object, _valuesStart, _valuesEnd, value) {\n\t\t\t\t\t\t\tfor (var property in _valuesEnd) {\n\t\t\t\t\t\t\t\t\t// Don't update properties that do not exist in the source object\n\t\t\t\t\t\t\t\t\tif (_valuesStart[property] === undefined) {\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar start = _valuesStart[property] || 0;\n\t\t\t\t\t\t\t\t\tvar end = _valuesEnd[property];\n\t\t\t\t\t\t\t\t\tvar startIsArray = Array.isArray(_object[property]);\n\t\t\t\t\t\t\t\t\tvar endIsArray = Array.isArray(end);\n\t\t\t\t\t\t\t\t\tvar isInterpolationList = !startIsArray && endIsArray;\n\t\t\t\t\t\t\t\t\tif (isInterpolationList) {\n\t\t\t\t\t\t\t\t\t\t\t_object[property] = this._interpolationFunction(end, value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (typeof end === 'object' && end) {\n\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore FIXME?\n\t\t\t\t\t\t\t\t\t\t\tthis._updateProperties(_object[property], start, end, value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\t\t\t\t\t\t\t\tend = this._handleRelativeValue(start, end);\n\t\t\t\t\t\t\t\t\t\t\t// Protect against non numeric properties.\n\t\t\t\t\t\t\t\t\t\t\tif (typeof end === 'number') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore FIXME?\n\t\t\t\t\t\t\t\t\t\t\t\t\t_object[property] = start + (end - start) * value;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype._handleRelativeValue = function (start, end) {\n\t\t\t\t\t\t\tif (typeof end !== 'string') {\n\t\t\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\t\t\t\treturn start + parseFloat(end);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\treturn parseFloat(end);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tTween.prototype._swapEndStartRepeatValues = function (property) {\n\t\t\t\t\t\t\tvar tmp = this._valuesStartRepeat[property];\n\t\t\t\t\t\t\tvar endValue = this._valuesEnd[property];\n\t\t\t\t\t\t\tif (typeof endValue === 'string') {\n\t\t\t\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(endValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesEnd[property];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._valuesEnd[property] = tmp;\n\t\t\t\t\t};\n\t\t\t\t\treturn Tween;\n\t\t\t}());\n\n\t\t\tvar VERSION = '18.6.4';\n\n\t\t\t/**\n\t\t\t * Tween.js - Licensed under the MIT license\n\t\t\t * https://github.com/tweenjs/tween.js\n\t\t\t * ----------------------------------------------\n\t\t\t *\n\t\t\t * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n\t\t\t * Thank you all, you're awesome!\n\t\t\t */\n\t\t\tvar nextId = Sequence.nextId;\n\t\t\t/**\n\t\t\t * Controlling groups of tweens\n\t\t\t *\n\t\t\t * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n\t\t\t * In these cases, you may want to create your own smaller groups of tweens.\n\t\t\t */\n\t\t\tvar TWEEN = mainGroup;\n\t\t\t// This is the best way to export things in a way that's compatible with both ES\n\t\t\t// Modules and CommonJS, without build hacks, and so as not to break the\n\t\t\t// existing API.\n\t\t\t// https://github.com/rollup/rollup/issues/1961#issuecomment-423037881\n\t\t\tvar getAll = TWEEN.getAll.bind(TWEEN);\n\t\t\tvar removeAll = TWEEN.removeAll.bind(TWEEN);\n\t\t\tvar add = TWEEN.add.bind(TWEEN);\n\t\t\tvar remove = TWEEN.remove.bind(TWEEN);\n\t\t\tvar update = TWEEN.update.bind(TWEEN);\n\t\t\tvar exports$1 = {\n\t\t\t\t\tEasing: Easing,\n\t\t\t\t\tGroup: Group,\n\t\t\t\t\tInterpolation: Interpolation,\n\t\t\t\t\tnow: now$1,\n\t\t\t\t\tSequence: Sequence,\n\t\t\t\t\tnextId: nextId,\n\t\t\t\t\tTween: Tween,\n\t\t\t\t\tVERSION: VERSION,\n\t\t\t\t\tgetAll: getAll,\n\t\t\t\t\tremoveAll: removeAll,\n\t\t\t\t\tadd: add,\n\t\t\t\t\tremove: remove,\n\t\t\t\t\tupdate: update,\n\t\t\t};\n\n\t\t\texports.Easing = Easing;\n\t\t\texports.Group = Group;\n\t\t\texports.Interpolation = Interpolation;\n\t\t\texports.Sequence = Sequence;\n\t\t\texports.Tween = Tween;\n\t\t\texports.VERSION = VERSION;\n\t\t\texports.add = add;\n\t\t\texports.default = exports$1;\n\t\t\texports.getAll = getAll;\n\t\t\texports.nextId = nextId;\n\t\t\texports.now = now$1;\n\t\t\texports.remove = remove;\n\t\t\texports.removeAll = removeAll;\n\t\t\texports.update = update;\n\n\t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n\t})));\n`;\nconst code1 = `\n    const doStuff = (stuff) => {\n        if (stuff) {\n            if (devFlag) {\n                log('perf start');\n                doRecursion();\n                log('perf end');\n\n                return;\n            }\n\n            doRecursion();\n            end();\n        } else {\n            throw new Error('No stuff!');\n        }\n\n        return null;\n    };\n`;\nconst code2 = `\n    const list = [1, 2, 3, 4];\n\n    function print(list) {\n        newList.forEach(i => {\n            if (i > 2) return;\n            console.log(i);\n        });\n    }\n\n    print(list);\n`;\nconst code3 = `\n    class Man {\n        constructor(n) {\n            this.name = n;\n        }\n\n        sayName() {\n            return this.name\n        }\n    }\n`;\nconst code4 = `\n    class A { b = 1; }\n\n    function indexSearch(list, element) {\n        let currentIndex,\n            currentElement,\n            minIndex = 0,\n            maxIndex = list.length - 1;\n\n        while (minIndex <= maxIndex) {\n            currentIndex = Math.floor((maxIndex + maxIndex) / 2);\n            currentElement = list[currentIndex];\n\n            if (currentElement === element) {\n                return currentIndex;\n            }\n\n            if (currentElement < element) {\n                minIndex = currentIndex + 1;\n            }\n\n            if (currentElement > element) {\n                maxIndex = currentIndex - 1;\n            }\n        }\n\n        return -1;\n    }\n`;\nconst code5 = `\n    import {format, trim} from 'formattier';\n    import {log} from 'logger';\n\n    const data = [];\n\n    export default print = (list) => {\n        list.forEach(i => {\n            console.log(i);\n        });\n    }\n\n    export const formatString = (str) => formatter(str);\n    export const MAX_STR_LENGTH = 15;\n`;\nconst code6 = `\n    function switchSampleFromMDN() {\n        const foo = 0;\n\n        switch (foo) {\n          case -1:\n            console.log('negative 1');\n            break;\n          case 0:\n            console.log(0);\n          case 1:\n            console.log(1);\n            return 1;\n          default:\n            console.log('default');\n        }\n    }\n`;\nconst code7 = `\n    function print(list) {\n        const newList = list.map(i => {\n            return i + 1;\n        });\n\n        newList.forEach(i => {\n            console.debug('iteration start');\n            console.log(i);\n            console.debug('iteration end');\n        });\n    }\n`;\nconst code8 = `\n\timport { complexTraversal } from 'shared/utils/traversalWithTreeLevelsPointer';\n\timport { SVGBase } from './SVGBase';\n\timport { createShapeForNode, createRootCircle, createConnectionArrow } from './shapesFactory';\n\timport { TOKEN_TYPES, TOKEN_KEYS, ARROW_TYPE } from 'shared/constants';\n\texport const buildSVGObjectsTree = (flowTree, styleTheme) => {\n\t    const svg = SVGBase();\n\n\t    const shapeStructures = buildShapeStructures(flowTree, styleTheme);\n\t    const connections = buildConnections(shapeStructures.root, styleTheme);\n\n\t    svg.addShapes(shapeStructures.list).addShapes(shapeStructures.root);\n\t    svg.addArrowConnections(connections);\n\n\t    return svg;\n\t};\n\texport const buildShapeStructures = (flowTree, styleTheme) => {\n\t    const root = createRootCircle(flowTree, styleTheme),\n\t        position = { ...root.getChildOffsetPoint() },\n\t        shapesList = [];\n\n\t    let latestNode;\n\n\t    complexTraversal(\n\t        flowTree,\n\t        root,\n\t        (parentNode, parentShape) => {\n\t            position.x += parentShape.getChildOffsetPoint().x;\n\t        },\n\t        (node, parentShape) => {\n\t            position.y += addExtraSpacingBeforeShape(styleTheme, node, latestNode);\n\n\t            //TODO: refactor, move cases out of func, it will to many of them soon\n\t            if (\n\t                parentShape.getNodeType() === TOKEN_TYPES.CONDITIONAL &&\n\t                node.key === TOKEN_KEYS.ALTERNATE &&\n\t                !parentShape.checkIfChildExist(TOKEN_KEYS.ALTERNATE)\n\t            ) {\n\t                const alternatePoint = parentShape.getAlternativeBranchChildOffsetPoint();\n\t                position.x = alternatePoint.x + parentShape.getMargin();\n\t                position.y = alternatePoint.y;\n\t            }\n\n\t            const shape = createShapeForNode(node, { x: position.x, y: position.y }, styleTheme);\n\n\t            position.x = shape.getPosition().x;\n\t            position.y = shape.getPosition().y;\n\n\t            shapesList.push(shape);\n\t            parentShape.connectChild(shape);\n\t            position.y += shape.getChildOffsetPoint().y;\n\n\t            latestNode = node;\n\t            return shape;\n\t        },\n\t        (parentNode, parentShape) => {\n\t            if (parentNode.type === TOKEN_TYPES.CONDITIONAL) {\n\t                position.y = parentShape.getChildBoundaries().max.y + parentShape.getMargin();\n\t            }\n\n\t            position.x = parentShape.getPosition().x;\n\t        }\n\t    );\n\n\t    return {\n\t        list: shapesList,\n\t        root: root\n\t    };\n\t};\n\tconst addExtraSpacingBeforeShape = (theme, node, latestNode = {}) => {\n\t    const complexNodeTypes = [\n\t        TOKEN_TYPES.FUNCTION,\n\t        TOKEN_TYPES.FUNCTION_DECLARATION,\n\t        TOKEN_TYPES.FUNCTION_EXPRESSION,\n\t        TOKEN_TYPES.ARROW_FUNCTION_EXPRESSION,\n\t        TOKEN_TYPES.CLASS_DECLARATION,\n\t        TOKEN_TYPES.IMPORT_DECLARATION,\n\t        TOKEN_TYPES.EXPORT_NAMED_DECLARATION,\n\t        TOKEN_TYPES.EXPORT_DEFAULT_DECLARATION\n\t    ];\n\n\t    if (\n\t        complexNodeTypes.includes(node.type) &&\n\t        !complexNodeTypes.includes(latestNode.type) &&\n\t        node.pathParentType !== TOKEN_TYPES.CALL_EXPRESSION\n\t    ) {\n\t        return theme.BaseShape.complexTypeExtraSpace;\n\t    }\n\n\t    return 0;\n\t};\n\texport const buildConnections = (shapesTree, styleTheme) => {\n\t    const connections = [],\n\t        pushArrow = config => {\n\t            const connection = createConnectionArrow(config, styleTheme);\n\t            connections.push(connection);\n\n\t            return connection;\n\t        };\n\n\t    let latestShape = null,\n\t        latestParentShape = null;\n\n\t    complexTraversal(\n\t        shapesTree,\n\t        shapesTree,\n\t        parentShape => {},\n\t        (shape, parentShape) => {\n\t            latestShape = shape;\n\n\t            const config = buildConnectionConfig(shape, parentShape),\n\t                arrow = pushArrow(config);\n\n\t            shape.assignConnectionArrow(arrow);\n\n\t            return shape;\n\t        },\n\t        parentShape => {\n\t            latestParentShape = parentShape;\n\t            if (parentShape.getNodeType() !== TOKEN_TYPES.LOOP) return;\n\n\t            const { max } = parentShape.getChildBoundaries();\n\n\t            parentShape.assignLoopedConnectionArrow(\n\t                pushArrow({\n\t                    startPoint: latestShape.getBackPoint(),\n\t                    endPoint: parentShape.getMidPoint(),\n\t                    boundaryPoint: { x: max.x },\n\t                    arrowType: ARROW_TYPE.DOWN\n\t                })\n\t            );\n\t        },\n\t        {\n\t            getBody: node => node.getBody()\n\t        }\n\t    );\n\n\t    return connections;\n\t};\n\tconst isNoArrow = (toShape, fromShape) => {\n\t    if (\n\t        [\n\t            TOKEN_TYPES.IMPORT_SPECIFIER,\n\t            TOKEN_TYPES.IMPORT_DEFAULT_SPECIFIER,\n\t            TOKEN_TYPES.OBJECT_PROPERTY\n\t        ].includes(toShape.getNodeType())\n\t    ) {\n\t        return true;\n\t    }\n\n\t    if (\n\t        [\n\t            TOKEN_TYPES.FUNCTION_DECLARATION,\n\t            TOKEN_TYPES.FUNCTION_EXPRESSION,\n\t            TOKEN_TYPES.FUNCTION,\n\t            TOKEN_TYPES.ARROW_FUNCTION_EXPRESSION\n\t        ].includes(toShape.getNodeType()) &&\n\t        [\n\t            TOKEN_TYPES.CALL_EXPRESSION,\n\t            TOKEN_TYPES.VARIABLE_DECLARATOR,\n\t            TOKEN_TYPES.ASSIGNMENT_EXPRESSION,\n\t            TOKEN_TYPES.NEW_EXPRESSION\n\t        ].includes(fromShape.getNodeType())\n\t    ) {\n\t        return true;\n\t    }\n\t};\n\tconst buildConnectionConfig = (toShape, fromShape) => {\n\t    const config = {\n\t        endPoint: toShape.getToPoint(),\n\t        arrowType: ARROW_TYPE.RIGHT,\n\t        noArrow: isNoArrow(toShape, fromShape)\n\t    };\n\n\t    if (\n\t        toShape.getNodeKey() === TOKEN_KEYS.ALTERNATE &&\n\t        toShape.getNodeType() !== TOKEN_TYPES.OBJECT_PROPERTY\n\t    ) {\n\t        const boundaryPoint = fromShape.getAlternativeBranchChildOffsetPoint();\n\n\t        config.startPoint = fromShape.getAlternateFromPoint();\n\t        config.boundaryPoint = { x: boundaryPoint.x };\n\t    } else {\n\t        config.startPoint = fromShape.getFromPoint();\n\t    }\n\n\t    return config;\n\t};\n`;\nconst code9 = `\n        const list = [1, 2, 3, 4];\n\n        function filterAndPrint(list) {\n            list = list.filter((i, b) => a);\n\n            list.forEach(i => console.log(i));\n\n            return false;\n        }\n\n        filterAndPrint(list);\n`;\nconst code10 = `\n    import {format} from './util/string';\n\n    function formatName(name) {\n        if (!name) return 'no-name';\n\n        return format(name);\n    }\n\n    class Animal {\n        constructor(breed) {\n            this.breed = breed;\n        }\n\n        getBreed() {\n            return this.breed;\n        }\n\n        setName(name) {\n            if (this.nameExist()) {\n                return;\n            }\n\n            this.name = name;\n        }\n    }\n\n    class Man extends Animal {\n       sayName() {\n            console.log('name', this.name);\n       }\n    }\n\n    export default Man;\n`;\nconst testCode = `\n\tvar a = 1\n`\n\nexport default class JsCodeToSvgFlowchart extends React.Component{\n\tcomponentDidMount(){\n\t\tthis.flowchartDom.innerHTML = convertCodeToSvg(testCode)\n\t\t// this.flowchartDom.innerHTML = convertCodeToSvg(code)\n\t\t// console.log( babelParser.parse )\n\t\t// console.log( babelParser.parse(code, {\n\t\t// sourceType: 'module',\n\t\t// \tplugins: [\n\t\t// \t\t\t'objectRestSpread',\n\t\t// \t\t\t'jsx',\n\t\t// \t\t\t'typescript',\n\t\t// \t\t\t'classProperties',\n\t\t// \t\t\t'asyncGenerators',\n\t\t// \t\t\t'dynamicImport',\n\t\t// \t\t\t'exportDefaultFrom',\n\t\t// \t\t\t'exportNamespaceFrom',\n\t\t// \t]\n\t\t// }))\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div className={'JsCodeToSvgFlowchart'} ref={(dom)=>{\n\t\t\t\tthis.flowchartDom = dom\n\t\t\t}}>\n\t\t\t</div>\n\t\t)\n\t}\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/Js2flowchart.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/constants.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/FlowTreeBuilder.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/presentation-generator/PresentationGenerator.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/SVGRender.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/abstractionLevelsConfigurator.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/entryDefinitionsMap.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/astBuilder.js",["444"],"import * as babelParser from '@babel/parser';\n// import Parser from './BabelParser.copy.js'\nimport Parser from './BabelParserCopy/BabelParserCopy.js'\nimport { mergeObjectStructures } from '../shared/utils/composition';\n\nimport { TOKEN_KEYS } from '../shared/constants';\nimport { setupPointer } from '../shared/utils/treeLevelsPointer';\nimport { logError } from '../shared/utils/logger';\nimport defaultAstConfig from './astParserConfig';\n\nexport const parseCodeToAST = (code, config = {}) => {\n    let ast = [];\n\n    try {\n        // console.log( 'code.length:', code.length )\n        // console.log( 'babelParser.parse:', babelParser.parse )\n        ast = new Parser(mergeObjectStructures(defaultAstConfig, config), code).parse()\n        // let testAst = new Parser(mergeObjectStructures(defaultAstConfig, config), code).parse()\n        // console.log( 'testAst:', testAst )\n        // ast = babelParser.parse(code, mergeObjectStructures(defaultAstConfig, config));\n        console.log('ast:', ast)\n    } catch (e) {\n        logError('Error at parseCodeToAST: ' + e.message, e.loc, e.stack);\n        throw e;\n    }\n\n    return ast;\n};\n\nexport const buildVisitor = ({ definitionsMap, globalIgnore }, treeNodesDestination) => {\n    const pointer = setupPointer(treeNodesDestination),\n        wrapByGlobalIgnore = visit => path => visit(path, globalIgnore);\n\n    return definitionsMap.reduce((acc, item) => {\n        if (!item.body) {\n            acc[item.type] = item.reversed\n                ? { exit: wrapByGlobalIgnore(visitSimpleEntry(item, pointer)) }\n                : wrapByGlobalIgnore(visitSimpleEntry(item, pointer));\n        } else {\n            acc[item.type] = {\n                enter: wrapByGlobalIgnore(enterComplexEntry(item, pointer)),\n                exit: wrapByGlobalIgnore(exitComplexEntry(item, pointer))\n            };\n        }\n\n        return acc;\n    }, {});\n};\n\n//TODO: refactor, looks a bit duplicated\nconst visitSimpleEntry = (item, pointer) => (path, globalIgnore) => {\n    if (item.ignore && item.ignore(path)) return;\n\n    const entryConfig = {\n        ...getBasicEntryConfig(item, path)\n    };\n\n    if (globalIgnore && globalIgnore(entryConfig)) return;\n\n    pushEntry(pointer, entryConfig);\n};\n\nconst enterComplexEntry = (item, pointer) => (path, globalIgnore) => {\n    if (item.ignore && item.ignore(path)) return;\n\n    const entryConfig = pushComplexEntry(item, pointer, path, globalIgnore);\n\n    pointer.stepIn(entryConfig);\n};\n\nconst pushComplexEntry = (item, pointer, path, globalIgnore) => {\n    const entryConfig = {\n        ...getBasicEntryConfig(item, path),\n        body: []\n    };\n\n    if (!(globalIgnore && globalIgnore(entryConfig))) {\n        pushEntry(pointer, entryConfig);\n    }\n\n    return entryConfig;\n};\n\nconst pushEntry = (pointer, entry) => {\n    const parent = pointer.getCurrent();\n    entry.parent = parent;\n\n    (parent.body || parent).push(entry);\n};\n\nconst getStatementParentKey = path => {\n    const statementParent =\n        path.find(path => path.parentKey === TOKEN_KEYS.PROGRAM || path.isStatementOrBlock()) || {};\n    return statementParent.key;\n};\n\nconst exitComplexEntry = (item, pointer) => path => {\n    if (item.ignore && item.ignore(path)) return;\n\n    pointer.stepOut();\n};\n\nconst getBasicEntryConfig = (item, path) => {\n    const name = item.getName(path),\n        nameOptions = typeof name === 'string' ? { name } : name;\n\n    const config = {\n        ...nameOptions,\n        type: item.type,\n        key: getStatementParentKey(path),\n        isBodyEntry: path.key === TOKEN_KEYS.BODY\n    };\n\n    if (!config.name) {\n        config.name = '';\n    }\n\n    if (item.type !== path.node.type) {\n        config.subType = path.node.type;\n    }\n\n    return config;\n};\n","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/FlowTreeModifier.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/svgObjectsBuilder.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/modifiers/modifiersFactory.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/StyleThemeFactory.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/astParserConfig.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/abstraction-levels/functionDependencies.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/converters/core.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/abstraction-levels/functions.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/converters/Harmony.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapesFactory.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/SVGBase.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/themes/Blurred.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/themes/DefaultBaseTheme.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/themes/Light.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/themes/BlackAndWhite.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapesDefinitionsMap.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/connections/ConnectionArrow.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ConditionRhombus.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/RootCircle.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/Rectangle.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/LoopRhombus.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/VerticalEdgedRectangle.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ReturnStatement.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/DestructedNode.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ImportDeclaration.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ExportDeclaration.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/CatchClause.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ThrowStatement.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/SwitchStatement.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/TryStatement.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ContinueStatement.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/SwitchCase.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/BreakStatement.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ImportSpecifier.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ObjectProperty.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/CallExpression.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/ClassDeclaration.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/DebuggerStatement.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/BaseShape.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/shapes/Rhombus.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/render/svg/appearance/TextContentConfigurator.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/logger.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/treeLevelsPointer.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/composition.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/traversalWithTreeLevelsPointer.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/traversal.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/svgPrimitives.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/geometry.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/iteratorBuilder.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/flatten.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/shared/utils/string.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParser.copy.js",["445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548"],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/BabelParserCopy.js",["549","550","551"],"import StatementParser from './extends/StatementParser.js'\nimport ScopeHandler from './ScopeHandler.js'\nimport ProductionParameterHandler from './ProductionParameterHandler.js'\nimport ExpressionScopeHandler from './ExpressionScopeHandler.js'\n// import ClassScopeHandler from './ClassScopeHandler.js'\nimport State from './State.js'\nimport { PARAM, PARAM_AWAIT, SCOPE_PROGRAM } from './Parameter.js'\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n}\n\nexport default class Parser extends StatementParser {\n  constructor(options, code) {\n    console.log( 'Parser解析初始化' )\n    super(defaultOptions, code)\n    this.options = defaultOptions\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule)\n    this.prodParam = new ProductionParameterHandler()\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this))\n    this.plugins = new Map()\n\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = code;\n    this.length = code.length;\n    this.isLookahead = false;\n\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n  parse() {\n    let paramFlags = PARAM;\n    const file = this.startNode()\n    const program = this.startNode()\n    this.nextToken();\n    this.parseTopLevel(file, program)\n    // console.log( 'program:', program )\n    // console.log( 'file:', file )\n    return file;\n  }\n  hasPlugin(name) {\n    // return this.plugins.has(name);\n    return this.plugins.has(name);\n  }\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ScopeHandler.js",["552","553","554","555","556","557","558","559","560","561"],"// import Scope from './Scope.js'\nimport { SCOPE_ARROW, SCOPE_SIMPLE_CATCH, BIND_KIND_VALUE, SCOPE_VAR, BIND_SCOPE_VAR, BIND_SCOPE_FUNCTION, BIND_SCOPE_LEXICAL, SCOPE_PROGRAM, SCOPE_DIRECT_SUPER, SCOPE_FUNCTION, SCOPE_SUPER, SCOPE_CLASS  } from './Parameter'\nimport ErrorMessages from './ErrorMessages.js'\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n}\nexport default class ScopeHandler {\n  constructor(raise, inModule) {\n    // console.log( 'raise:', raise )\n    // console.log( 'inModule:', inModule )\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n  createScope(flags) {\n    return new Scope(flags);\n  }\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && \n        !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ProductionParameterHandler.js",["562","563","564","565"],"import { PARAM_AWAIT, PARAM_YIELD, PARAM_RETURN, PARAM_IN } from './Parameter.js'\n\nexport default class ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n  exit() {\n    this.stacks.pop();\n  }\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/StatementParser.js",["566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595"],"import ExpressionParser from './ExpressionParser.js'\nimport types from '../types.js'\nimport ErrorMessages from '../ErrorMessages.js'\nimport { loneSurrogate, lineBreak, BIND_CLASS, CLASS_ELEMENT_INSTANCE_SETTER, CLASS_ELEMENT_STATIC_SETTER, CLASS_ELEMENT_INSTANCE_GETTER, CLASS_ELEMENT_STATIC_GETTER, CLASS_ELEMENT_OTHER, PARAM, newExpressionScope, SCOPE_SUPER, SCOPE_CLASS, BIND_FUNCTION, newParameterDeclarationScope, functionFlags, SCOPE_FUNCTION, FUNC_NULLABLE_ID, FUNC_NO_FLAGS, BIND_VAR, BIND_LEXICAL, SCOPE_SIMPLE_CATCH, switchLabel, isIdentifierStart, isIdentifierChar, keywordRelationalOperator, loopLabel, SCOPE_OTHER, FUNC_STATEMENT, FUNC_HANGING_STATEMENT } from '../Parameter.js'\nimport ExpressionErrors from '../ExpressionErrors.js'\n\nexport default class StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    program.sourceType = this.options.sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, types.eof);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ExpressionScopeHandler.js",["596"],"import ExpressionScope from './ExpressionScope.js'\nimport { kMaybeAsyncArrowParameterDeclaration } from './Parameter.js'\n\nexport default class ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/State.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/Parameter.js",["597","598"],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/ExpressionParser.js",["599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621"],"import LValParser from './LValParser.js'\nimport ErrorMessages from '../ErrorMessages.js'\nimport { isStrictReservedWord, isStrictBindReservedWord, isReservedWord, isKeyword, PARAM , PARAM_AWAIT, SCOPE_PROGRAM , newAsyncArrowScope ,isIdentifierStart, functionFlags, newArrowHeadScope, SCOPE_FUNCTION, SCOPE_SUPER, SCOPE_CLASS, SCOPE_DIRECT_SUPER, SCOPE_ARROW, PARAM_IN, newExpressionScope, PARAM_RETURN, BIND_OUTSIDE, BIND_VAR} from '../Parameter.js'\nimport types from '../types.js'\nimport types$1 from '../types$1.js'\nimport ExpressionErrors from '../ExpressionErrors.js'\nimport ExpressionScope from '../ExpressionScope.js'\n\nexport default class ExpressionParser extends LValParser {\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n  parseMaybeUnary(refExpressionErrors) {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(node.id.name, node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n      }\n    }\n  }\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/LValParser.js",["622","623"],"import NodeUtils from './NodeUtils.js'\nimport { unwrapParenthesizedExpression, BIND_NONE, isStrictBindReservedWord, isStrictBindOnlyReservedWord } from '../Parameter.js'\nimport ErrorMessages from '../ErrorMessages.js'\nimport types from '../types.js'\n\nexport default class LValParser extends NodeUtils {\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        const {\n          name\n        } = expr;\n        if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n        }\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, ErrorMessages.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n        break;\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n        break;\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n        break;\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ErrorMessages.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/types.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ExpressionErrors.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/ExpressionScope.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/types$1.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/NodeUtils.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/UtilParser.js",["624","625"],"import Tokenizer from './Tokenizer.js'\nimport types from '../types.js'\nimport ErrorMessages from '../ErrorMessages.js'\nimport { isIdentifierChar, lineBreak } from '../Parameter.js'\n\n\nexport default class UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n  semicolon() {\n    if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n  }\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/Tokenizer.js",["626","627","628","629","630","631","632","633","634","635","636","637"],"import CommentsParser from './CommentsParser.js'\nimport types from '../types.js'\nimport types$1 from '../types$1.js'\nimport { Token, _isDigit, forbiddenNumericSeparatorSiblings, VALID_REGEX_FLAGS, lineBreak, allowedNumericSeparatorSiblings, keywords, isIdentifierChar, isIdentifierStart, isWhitespace, skipWhiteSpace , SourceLocation, lineBreakG, isNewLine } from '../Parameter.js'\nimport ErrorMessages from '../ErrorMessages.js'\n\nexport default class Tokenizer  extends CommentsParser{\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n  match(type) {\n    return this.state.type === type;\n  }\n  curContext() {\n    console.log()\n    return this.state.context[this.state.context.length - 1];\n  }\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      // console.log( 'if' )\n      // override(this);\n    } else {\n      // console.log( 'else' )\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/extends/CommentsParser.js",["638","639","640","641","642"],"import { last } from '../Parameter.js'\n\nexport default class CommentsParser {\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}","/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/TokenType.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/TokContext.js",[],"/Users/wangxinbo/Desktop/codeParse/react-project/src/Test/Js2flowchart/builder/BabelParserCopy/Node.js",[],{"ruleId":"643","replacedBy":"644"},{"ruleId":"645","replacedBy":"646"},{"ruleId":"643","replacedBy":"647"},{"ruleId":"645","replacedBy":"648"},{"ruleId":"649","severity":1,"message":"650","line":5,"column":7,"nodeType":"651","messageId":"652","endLine":5,"endColumn":11},{"ruleId":"649","severity":1,"message":"653","line":827,"column":7,"nodeType":"651","messageId":"652","endLine":827,"endColumn":12},{"ruleId":"649","severity":1,"message":"654","line":847,"column":7,"nodeType":"651","messageId":"652","endLine":847,"endColumn":12},{"ruleId":"649","severity":1,"message":"655","line":859,"column":7,"nodeType":"651","messageId":"652","endLine":859,"endColumn":12},{"ruleId":"649","severity":1,"message":"656","line":870,"column":7,"nodeType":"651","messageId":"652","endLine":870,"endColumn":12},{"ruleId":"649","severity":1,"message":"657","line":899,"column":7,"nodeType":"651","messageId":"652","endLine":899,"endColumn":12},{"ruleId":"649","severity":1,"message":"658","line":914,"column":7,"nodeType":"651","messageId":"652","endLine":914,"endColumn":12},{"ruleId":"649","severity":1,"message":"659","line":932,"column":7,"nodeType":"651","messageId":"652","endLine":932,"endColumn":12},{"ruleId":"649","severity":1,"message":"660","line":945,"column":7,"nodeType":"651","messageId":"652","endLine":945,"endColumn":12},{"ruleId":"649","severity":1,"message":"661","line":1134,"column":7,"nodeType":"651","messageId":"652","endLine":1134,"endColumn":12},{"ruleId":"649","severity":1,"message":"662","line":1147,"column":7,"nodeType":"651","messageId":"652","endLine":1147,"endColumn":13},{"ruleId":"649","severity":1,"message":"663","line":1,"column":13,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"664","severity":1,"message":"665","line":1,"column":1,"nodeType":"666","messageId":"667","endLine":1,"endColumn":14,"fix":"668"},{"ruleId":"669","severity":1,"message":"670","line":482,"column":7,"nodeType":"671","messageId":"672","endLine":502,"endColumn":8},{"ruleId":"673","severity":1,"message":"674","line":503,"column":109,"nodeType":"675","messageId":"676","endLine":503,"endColumn":111},{"ruleId":"673","severity":1,"message":"674","line":503,"column":144,"nodeType":"675","messageId":"676","endLine":503,"endColumn":146},{"ruleId":"673","severity":1,"message":"677","line":503,"column":144,"nodeType":"675","messageId":"676","endLine":503,"endColumn":146},{"ruleId":"673","severity":1,"message":"677","line":503,"column":205,"nodeType":"675","messageId":"676","endLine":503,"endColumn":207},{"ruleId":"669","severity":1,"message":"670","line":982,"column":5,"nodeType":"671","messageId":"672","endLine":995,"endColumn":6},{"ruleId":"673","severity":1,"message":"674","line":1198,"column":19,"nodeType":"675","messageId":"676","endLine":1198,"endColumn":21},{"ruleId":"673","severity":1,"message":"674","line":1198,"column":39,"nodeType":"675","messageId":"676","endLine":1198,"endColumn":41},{"ruleId":"673","severity":1,"message":"677","line":1305,"column":61,"nodeType":"675","messageId":"676","endLine":1305,"endColumn":63},{"ruleId":"673","severity":1,"message":"677","line":1305,"column":112,"nodeType":"675","messageId":"676","endLine":1305,"endColumn":114},{"ruleId":"673","severity":1,"message":"677","line":1305,"column":141,"nodeType":"675","messageId":"676","endLine":1305,"endColumn":143},{"ruleId":"673","severity":1,"message":"677","line":1305,"column":189,"nodeType":"675","messageId":"676","endLine":1305,"endColumn":191},{"ruleId":"673","severity":1,"message":"677","line":1575,"column":54,"nodeType":"675","messageId":"676","endLine":1575,"endColumn":56},{"ruleId":"673","severity":1,"message":"677","line":1575,"column":119,"nodeType":"675","messageId":"676","endLine":1575,"endColumn":121},{"ruleId":"673","severity":1,"message":"677","line":2370,"column":76,"nodeType":"675","messageId":"676","endLine":2370,"endColumn":78},{"ruleId":"673","severity":1,"message":"677","line":2370,"column":104,"nodeType":"675","messageId":"676","endLine":2370,"endColumn":106},{"ruleId":"673","severity":1,"message":"677","line":2647,"column":105,"nodeType":"675","messageId":"676","endLine":2647,"endColumn":107},{"ruleId":"673","severity":1,"message":"677","line":2647,"column":132,"nodeType":"675","messageId":"676","endLine":2647,"endColumn":134},{"ruleId":"673","severity":1,"message":"677","line":2651,"column":135,"nodeType":"675","messageId":"676","endLine":2651,"endColumn":137},{"ruleId":"673","severity":1,"message":"677","line":2651,"column":162,"nodeType":"675","messageId":"676","endLine":2651,"endColumn":164},{"ruleId":"673","severity":1,"message":"674","line":2816,"column":45,"nodeType":"675","messageId":"676","endLine":2816,"endColumn":47},{"ruleId":"673","severity":1,"message":"674","line":2816,"column":109,"nodeType":"675","messageId":"676","endLine":2816,"endColumn":111},{"ruleId":"673","severity":1,"message":"677","line":2816,"column":109,"nodeType":"675","messageId":"676","endLine":2816,"endColumn":111},{"ruleId":"673","severity":1,"message":"677","line":2816,"column":151,"nodeType":"675","messageId":"676","endLine":2816,"endColumn":153},{"ruleId":"673","severity":1,"message":"677","line":2816,"column":181,"nodeType":"675","messageId":"676","endLine":2816,"endColumn":183},{"ruleId":"673","severity":1,"message":"677","line":2816,"column":221,"nodeType":"675","messageId":"676","endLine":2816,"endColumn":223},{"ruleId":"669","severity":1,"message":"670","line":3823,"column":9,"nodeType":"671","messageId":"672","endLine":3868,"endColumn":10},{"ruleId":"678","severity":1,"message":"679","line":4063,"column":4,"nodeType":"680","messageId":"681","endLine":4063,"endColumn":5},{"ruleId":"673","severity":1,"message":"674","line":4354,"column":30,"nodeType":"675","messageId":"676","endLine":4354,"endColumn":32},{"ruleId":"673","severity":1,"message":"674","line":4354,"column":58,"nodeType":"675","messageId":"676","endLine":4354,"endColumn":60},{"ruleId":"673","severity":1,"message":"677","line":4878,"column":44,"nodeType":"675","messageId":"676","endLine":4878,"endColumn":46},{"ruleId":"673","severity":1,"message":"677","line":4878,"column":62,"nodeType":"675","messageId":"676","endLine":4878,"endColumn":64},{"ruleId":"673","severity":1,"message":"677","line":4931,"column":47,"nodeType":"675","messageId":"676","endLine":4931,"endColumn":49},{"ruleId":"673","severity":1,"message":"677","line":4931,"column":90,"nodeType":"675","messageId":"676","endLine":4931,"endColumn":92},{"ruleId":"673","severity":1,"message":"674","line":4934,"column":45,"nodeType":"675","messageId":"676","endLine":4934,"endColumn":47},{"ruleId":"673","severity":1,"message":"674","line":4934,"column":113,"nodeType":"675","messageId":"676","endLine":4934,"endColumn":115},{"ruleId":"673","severity":1,"message":"677","line":4934,"column":113,"nodeType":"675","messageId":"676","endLine":4934,"endColumn":115},{"ruleId":"673","severity":1,"message":"677","line":4934,"column":156,"nodeType":"675","messageId":"676","endLine":4934,"endColumn":158},{"ruleId":"669","severity":1,"message":"670","line":5212,"column":5,"nodeType":"671","messageId":"672","endLine":5225,"endColumn":6},{"ruleId":"673","severity":1,"message":"677","line":5613,"column":49,"nodeType":"675","messageId":"676","endLine":5613,"endColumn":51},{"ruleId":"673","severity":1,"message":"677","line":5613,"column":82,"nodeType":"675","messageId":"676","endLine":5613,"endColumn":84},{"ruleId":"669","severity":1,"message":"670","line":5729,"column":5,"nodeType":"671","messageId":"672","endLine":5787,"endColumn":6},{"ruleId":"669","severity":1,"message":"670","line":6332,"column":7,"nodeType":"671","messageId":"672","endLine":6362,"endColumn":8},{"ruleId":"682","severity":1,"message":"683","line":6348,"column":9,"nodeType":"684","messageId":"685","endLine":6350,"endColumn":53},{"ruleId":"669","severity":1,"message":"670","line":6405,"column":5,"nodeType":"671","messageId":"672","endLine":6466,"endColumn":6},{"ruleId":"669","severity":1,"message":"670","line":6515,"column":7,"nodeType":"671","messageId":"672","endLine":6524,"endColumn":8},{"ruleId":"673","severity":1,"message":"677","line":7082,"column":51,"nodeType":"675","messageId":"676","endLine":7082,"endColumn":53},{"ruleId":"673","severity":1,"message":"677","line":7082,"column":65,"nodeType":"675","messageId":"676","endLine":7082,"endColumn":67},{"ruleId":"669","severity":1,"message":"670","line":7271,"column":7,"nodeType":"671","messageId":"672","endLine":7285,"endColumn":8},{"ruleId":"673","severity":1,"message":"677","line":7416,"column":37,"nodeType":"675","messageId":"676","endLine":7416,"endColumn":39},{"ruleId":"673","severity":1,"message":"677","line":7416,"column":51,"nodeType":"675","messageId":"676","endLine":7416,"endColumn":53},{"ruleId":"686","severity":1,"message":"687","line":7615,"column":93,"nodeType":"688","messageId":"689","endLine":7615,"endColumn":94},{"ruleId":"686","severity":1,"message":"687","line":7615,"column":155,"nodeType":"688","messageId":"689","endLine":7615,"endColumn":156},{"ruleId":"686","severity":1,"message":"687","line":7615,"column":224,"nodeType":"688","messageId":"689","endLine":7615,"endColumn":225},{"ruleId":"686","severity":1,"message":"687","line":7641,"column":84,"nodeType":"688","messageId":"689","endLine":7641,"endColumn":85},{"ruleId":"686","severity":1,"message":"687","line":7641,"column":143,"nodeType":"688","messageId":"689","endLine":7641,"endColumn":144},{"ruleId":"682","severity":1,"message":"683","line":7955,"column":9,"nodeType":"684","messageId":"685","endLine":7955,"endColumn":17},{"ruleId":"673","severity":1,"message":"677","line":8011,"column":22,"nodeType":"675","messageId":"676","endLine":8011,"endColumn":24},{"ruleId":"673","severity":1,"message":"677","line":8011,"column":37,"nodeType":"675","messageId":"676","endLine":8011,"endColumn":39},{"ruleId":"682","severity":1,"message":"683","line":8348,"column":7,"nodeType":"684","messageId":"685","endLine":8348,"endColumn":15},{"ruleId":"673","severity":1,"message":"677","line":8547,"column":34,"nodeType":"675","messageId":"676","endLine":8547,"endColumn":36},{"ruleId":"673","severity":1,"message":"677","line":8547,"column":49,"nodeType":"675","messageId":"676","endLine":8547,"endColumn":51},{"ruleId":"673","severity":1,"message":"677","line":8746,"column":21,"nodeType":"675","messageId":"676","endLine":8746,"endColumn":23},{"ruleId":"673","severity":1,"message":"677","line":8746,"column":34,"nodeType":"675","messageId":"676","endLine":8746,"endColumn":36},{"ruleId":"682","severity":1,"message":"683","line":8785,"column":11,"nodeType":"684","messageId":"685","endLine":8787,"endColumn":19},{"ruleId":"682","severity":1,"message":"683","line":8852,"column":7,"nodeType":"684","messageId":"685","endLine":8854,"endColumn":30},{"ruleId":"682","severity":1,"message":"683","line":8856,"column":7,"nodeType":"684","messageId":"685","endLine":8856,"endColumn":17},{"ruleId":"682","severity":1,"message":"690","line":8868,"column":7,"nodeType":"684","messageId":"691","endLine":8894,"endColumn":40},{"ruleId":"673","severity":1,"message":"677","line":8991,"column":36,"nodeType":"675","messageId":"676","endLine":8991,"endColumn":38},{"ruleId":"673","severity":1,"message":"677","line":8991,"column":63,"nodeType":"675","messageId":"676","endLine":8991,"endColumn":65},{"ruleId":"692","severity":1,"message":"693","line":9020,"column":16,"nodeType":"694","messageId":"695","endLine":9020,"endColumn":43},{"ruleId":"669","severity":1,"message":"670","line":9339,"column":5,"nodeType":"671","messageId":"672","endLine":9394,"endColumn":6},{"ruleId":"669","severity":1,"message":"670","line":9482,"column":5,"nodeType":"671","messageId":"672","endLine":9493,"endColumn":6},{"ruleId":"673","severity":1,"message":"674","line":10043,"column":22,"nodeType":"675","messageId":"676","endLine":10043,"endColumn":24},{"ruleId":"673","severity":1,"message":"674","line":10043,"column":85,"nodeType":"675","messageId":"676","endLine":10043,"endColumn":87},{"ruleId":"673","severity":1,"message":"677","line":10043,"column":85,"nodeType":"675","messageId":"676","endLine":10043,"endColumn":87},{"ruleId":"673","severity":1,"message":"677","line":10043,"column":96,"nodeType":"675","messageId":"676","endLine":10043,"endColumn":98},{"ruleId":"669","severity":1,"message":"670","line":10060,"column":9,"nodeType":"671","messageId":"672","endLine":10070,"endColumn":10},{"ruleId":"682","severity":1,"message":"690","line":10072,"column":7,"nodeType":"684","messageId":"691","endLine":10073,"endColumn":56},{"ruleId":"682","severity":1,"message":"683","line":10500,"column":7,"nodeType":"684","messageId":"685","endLine":10503,"endColumn":45},{"ruleId":"682","severity":1,"message":"683","line":10563,"column":7,"nodeType":"684","messageId":"685","endLine":10572,"endColumn":10},{"ruleId":"682","severity":1,"message":"690","line":10574,"column":7,"nodeType":"684","messageId":"691","endLine":10575,"endColumn":33},{"ruleId":"673","severity":1,"message":"677","line":11413,"column":213,"nodeType":"675","messageId":"676","endLine":11413,"endColumn":215},{"ruleId":"673","severity":1,"message":"677","line":11413,"column":246,"nodeType":"675","messageId":"676","endLine":11413,"endColumn":248},{"ruleId":"673","severity":1,"message":"677","line":11432,"column":32,"nodeType":"675","messageId":"676","endLine":11432,"endColumn":34},{"ruleId":"673","severity":1,"message":"677","line":11432,"column":59,"nodeType":"675","messageId":"676","endLine":11432,"endColumn":61},{"ruleId":"682","severity":1,"message":"683","line":11766,"column":7,"nodeType":"684","messageId":"685","endLine":11791,"endColumn":10},{"ruleId":"673","severity":1,"message":"674","line":11784,"column":58,"nodeType":"675","messageId":"676","endLine":11784,"endColumn":60},{"ruleId":"673","severity":1,"message":"674","line":11784,"column":115,"nodeType":"675","messageId":"676","endLine":11784,"endColumn":117},{"ruleId":"673","severity":1,"message":"677","line":11784,"column":115,"nodeType":"675","messageId":"676","endLine":11784,"endColumn":117},{"ruleId":"673","severity":1,"message":"677","line":11784,"column":157,"nodeType":"675","messageId":"676","endLine":11784,"endColumn":159},{"ruleId":"673","severity":1,"message":"674","line":12776,"column":53,"nodeType":"675","messageId":"676","endLine":12776,"endColumn":55},{"ruleId":"673","severity":1,"message":"674","line":12776,"column":71,"nodeType":"675","messageId":"676","endLine":12776,"endColumn":73},{"ruleId":"673","severity":1,"message":"677","line":12776,"column":71,"nodeType":"675","messageId":"676","endLine":12776,"endColumn":73},{"ruleId":"673","severity":1,"message":"677","line":12776,"column":110,"nodeType":"675","messageId":"676","endLine":12776,"endColumn":112},{"ruleId":"673","severity":1,"message":"674","line":12899,"column":29,"nodeType":"675","messageId":"676","endLine":12899,"endColumn":31},{"ruleId":"673","severity":1,"message":"674","line":12899,"column":56,"nodeType":"675","messageId":"676","endLine":12899,"endColumn":58},{"ruleId":"673","severity":1,"message":"674","line":12906,"column":35,"nodeType":"675","messageId":"676","endLine":12906,"endColumn":37},{"ruleId":"673","severity":1,"message":"674","line":12906,"column":57,"nodeType":"675","messageId":"676","endLine":12906,"endColumn":59},{"ruleId":"673","severity":1,"message":"677","line":12918,"column":44,"nodeType":"675","messageId":"676","endLine":12918,"endColumn":46},{"ruleId":"673","severity":1,"message":"677","line":12918,"column":70,"nodeType":"675","messageId":"676","endLine":12918,"endColumn":72},{"ruleId":"649","severity":1,"message":"696","line":13435,"column":10,"nodeType":"651","messageId":"652","endLine":13435,"endColumn":15},{"ruleId":"649","severity":1,"message":"697","line":13472,"column":10,"nodeType":"651","messageId":"652","endLine":13472,"endColumn":25},{"ruleId":"649","severity":1,"message":"698","line":7,"column":17,"nodeType":"651","messageId":"652","endLine":7,"endColumn":28},{"ruleId":"649","severity":1,"message":"699","line":7,"column":30,"nodeType":"651","messageId":"652","endLine":7,"endColumn":43},{"ruleId":"649","severity":1,"message":"700","line":50,"column":9,"nodeType":"651","messageId":"652","endLine":50,"endColumn":19},{"ruleId":"649","severity":1,"message":"701","line":2,"column":143,"nodeType":"651","messageId":"652","endLine":2,"endColumn":161},{"ruleId":"649","severity":1,"message":"702","line":2,"column":179,"nodeType":"651","messageId":"652","endLine":2,"endColumn":190},{"ruleId":"673","severity":1,"message":"677","line":30,"column":44,"nodeType":"675","messageId":"676","endLine":30,"endColumn":46},{"ruleId":"673","severity":1,"message":"677","line":30,"column":62,"nodeType":"675","messageId":"676","endLine":30,"endColumn":64},{"ruleId":"673","severity":1,"message":"677","line":79,"column":47,"nodeType":"675","messageId":"676","endLine":79,"endColumn":49},{"ruleId":"673","severity":1,"message":"677","line":79,"column":90,"nodeType":"675","messageId":"676","endLine":79,"endColumn":92},{"ruleId":"673","severity":1,"message":"674","line":82,"column":45,"nodeType":"675","messageId":"676","endLine":82,"endColumn":47},{"ruleId":"673","severity":1,"message":"674","line":82,"column":113,"nodeType":"675","messageId":"676","endLine":82,"endColumn":115},{"ruleId":"673","severity":1,"message":"677","line":82,"column":113,"nodeType":"675","messageId":"676","endLine":82,"endColumn":115},{"ruleId":"673","severity":1,"message":"677","line":82,"column":156,"nodeType":"675","messageId":"676","endLine":82,"endColumn":158},{"ruleId":"649","severity":1,"message":"698","line":1,"column":10,"nodeType":"651","messageId":"652","endLine":1,"endColumn":21},{"ruleId":"649","severity":1,"message":"703","line":1,"column":23,"nodeType":"651","messageId":"652","endLine":1,"endColumn":34},{"ruleId":"649","severity":1,"message":"704","line":1,"column":36,"nodeType":"651","messageId":"652","endLine":1,"endColumn":48},{"ruleId":"649","severity":1,"message":"705","line":1,"column":50,"nodeType":"651","messageId":"652","endLine":1,"endColumn":58},{"ruleId":"649","severity":1,"message":"706","line":4,"column":10,"nodeType":"651","messageId":"652","endLine":4,"endColumn":23},{"ruleId":"649","severity":1,"message":"707","line":4,"column":25,"nodeType":"651","messageId":"652","endLine":4,"endColumn":34},{"ruleId":"649","severity":1,"message":"708","line":4,"column":36,"nodeType":"651","messageId":"652","endLine":4,"endColumn":46},{"ruleId":"649","severity":1,"message":"709","line":4,"column":48,"nodeType":"651","messageId":"652","endLine":4,"endColumn":77},{"ruleId":"649","severity":1,"message":"710","line":4,"column":79,"nodeType":"651","messageId":"652","endLine":4,"endColumn":106},{"ruleId":"649","severity":1,"message":"711","line":4,"column":108,"nodeType":"651","messageId":"652","endLine":4,"endColumn":137},{"ruleId":"649","severity":1,"message":"712","line":4,"column":139,"nodeType":"651","messageId":"652","endLine":4,"endColumn":166},{"ruleId":"649","severity":1,"message":"713","line":4,"column":168,"nodeType":"651","messageId":"652","endLine":4,"endColumn":187},{"ruleId":"649","severity":1,"message":"714","line":4,"column":189,"nodeType":"651","messageId":"652","endLine":4,"endColumn":194},{"ruleId":"649","severity":1,"message":"715","line":4,"column":196,"nodeType":"651","messageId":"652","endLine":4,"endColumn":214},{"ruleId":"649","severity":1,"message":"702","line":4,"column":216,"nodeType":"651","messageId":"652","endLine":4,"endColumn":227},{"ruleId":"649","severity":1,"message":"716","line":4,"column":229,"nodeType":"651","messageId":"652","endLine":4,"endColumn":240},{"ruleId":"649","severity":1,"message":"717","line":4,"column":242,"nodeType":"651","messageId":"652","endLine":4,"endColumn":255},{"ruleId":"649","severity":1,"message":"718","line":4,"column":257,"nodeType":"651","messageId":"652","endLine":4,"endColumn":285},{"ruleId":"649","severity":1,"message":"719","line":4,"column":287,"nodeType":"651","messageId":"652","endLine":4,"endColumn":300},{"ruleId":"649","severity":1,"message":"720","line":4,"column":302,"nodeType":"651","messageId":"652","endLine":4,"endColumn":316},{"ruleId":"649","severity":1,"message":"721","line":4,"column":318,"nodeType":"651","messageId":"652","endLine":4,"endColumn":334},{"ruleId":"649","severity":1,"message":"722","line":4,"column":336,"nodeType":"651","messageId":"652","endLine":4,"endColumn":349},{"ruleId":"649","severity":1,"message":"723","line":4,"column":375,"nodeType":"651","messageId":"652","endLine":4,"endColumn":393},{"ruleId":"649","severity":1,"message":"724","line":4,"column":395,"nodeType":"651","messageId":"652","endLine":4,"endColumn":406},{"ruleId":"649","severity":1,"message":"725","line":4,"column":472,"nodeType":"651","messageId":"652","endLine":4,"endColumn":481},{"ruleId":"649","severity":1,"message":"726","line":4,"column":483,"nodeType":"651","messageId":"652","endLine":4,"endColumn":494},{"ruleId":"649","severity":1,"message":"727","line":4,"column":496,"nodeType":"651","messageId":"652","endLine":4,"endColumn":510},{"ruleId":"649","severity":1,"message":"728","line":4,"column":512,"nodeType":"651","messageId":"652","endLine":4,"endColumn":534},{"ruleId":"649","severity":1,"message":"729","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":24},{"ruleId":"682","severity":1,"message":"683","line":154,"column":7,"nodeType":"684","messageId":"685","endLine":179,"endColumn":10},{"ruleId":"673","severity":1,"message":"674","line":172,"column":58,"nodeType":"675","messageId":"676","endLine":172,"endColumn":60},{"ruleId":"673","severity":1,"message":"674","line":172,"column":115,"nodeType":"675","messageId":"676","endLine":172,"endColumn":117},{"ruleId":"673","severity":1,"message":"677","line":172,"column":115,"nodeType":"675","messageId":"676","endLine":172,"endColumn":117},{"ruleId":"673","severity":1,"message":"677","line":172,"column":157,"nodeType":"675","messageId":"676","endLine":172,"endColumn":159},{"ruleId":"649","severity":1,"message":"730","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":46},{"ruleId":"673","severity":1,"message":"674","line":135,"column":19,"nodeType":"675","messageId":"676","endLine":135,"endColumn":21},{"ruleId":"673","severity":1,"message":"674","line":135,"column":39,"nodeType":"675","messageId":"676","endLine":135,"endColumn":41},{"ruleId":"649","severity":1,"message":"714","line":3,"column":85,"nodeType":"651","messageId":"652","endLine":3,"endColumn":90},{"ruleId":"649","severity":1,"message":"698","line":3,"column":93,"nodeType":"651","messageId":"652","endLine":3,"endColumn":104},{"ruleId":"649","severity":1,"message":"699","line":3,"column":106,"nodeType":"651","messageId":"652","endLine":3,"endColumn":119},{"ruleId":"649","severity":1,"message":"731","line":3,"column":122,"nodeType":"651","messageId":"652","endLine":3,"endColumn":140},{"ruleId":"649","severity":1,"message":"719","line":3,"column":161,"nodeType":"651","messageId":"652","endLine":3,"endColumn":174},{"ruleId":"649","severity":1,"message":"732","line":3,"column":176,"nodeType":"651","messageId":"652","endLine":3,"endColumn":193},{"ruleId":"649","severity":1,"message":"720","line":3,"column":195,"nodeType":"651","messageId":"652","endLine":3,"endColumn":209},{"ruleId":"649","severity":1,"message":"702","line":3,"column":211,"nodeType":"651","messageId":"652","endLine":3,"endColumn":222},{"ruleId":"649","severity":1,"message":"716","line":3,"column":224,"nodeType":"651","messageId":"652","endLine":3,"endColumn":235},{"ruleId":"649","severity":1,"message":"701","line":3,"column":237,"nodeType":"651","messageId":"652","endLine":3,"endColumn":255},{"ruleId":"649","severity":1,"message":"733","line":3,"column":257,"nodeType":"651","messageId":"652","endLine":3,"endColumn":268},{"ruleId":"649","severity":1,"message":"715","line":3,"column":280,"nodeType":"651","messageId":"652","endLine":3,"endColumn":298},{"ruleId":"649","severity":1,"message":"704","line":3,"column":300,"nodeType":"651","messageId":"652","endLine":3,"endColumn":312},{"ruleId":"649","severity":1,"message":"734","line":3,"column":314,"nodeType":"651","messageId":"652","endLine":3,"endColumn":326},{"ruleId":"649","severity":1,"message":"735","line":3,"column":328,"nodeType":"651","messageId":"652","endLine":3,"endColumn":336},{"ruleId":"649","severity":1,"message":"736","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":23},{"ruleId":"673","severity":1,"message":"674","line":159,"column":22,"nodeType":"675","messageId":"676","endLine":159,"endColumn":24},{"ruleId":"673","severity":1,"message":"674","line":159,"column":85,"nodeType":"675","messageId":"676","endLine":159,"endColumn":87},{"ruleId":"673","severity":1,"message":"677","line":159,"column":85,"nodeType":"675","messageId":"676","endLine":159,"endColumn":87},{"ruleId":"673","severity":1,"message":"677","line":159,"column":96,"nodeType":"675","messageId":"676","endLine":159,"endColumn":98},{"ruleId":"682","severity":1,"message":"683","line":410,"column":7,"nodeType":"684","messageId":"685","endLine":413,"endColumn":45},{"ruleId":"682","severity":1,"message":"683","line":473,"column":7,"nodeType":"684","messageId":"685","endLine":482,"endColumn":10},{"ruleId":"682","severity":1,"message":"690","line":484,"column":7,"nodeType":"684","messageId":"691","endLine":485,"endColumn":33},{"ruleId":"649","severity":1,"message":"737","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":39},{"ruleId":"669","severity":1,"message":"670","line":8,"column":5,"nodeType":"671","messageId":"672","endLine":19,"endColumn":6},{"ruleId":"649","severity":1,"message":"738","line":4,"column":10,"nodeType":"651","messageId":"652","endLine":4,"endColumn":26},{"ruleId":"649","severity":1,"message":"707","line":4,"column":28,"nodeType":"651","messageId":"652","endLine":4,"endColumn":37},{"ruleId":"649","severity":1,"message":"739","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":15},{"ruleId":"649","severity":1,"message":"740","line":4,"column":62,"nodeType":"651","messageId":"652","endLine":4,"endColumn":79},{"ruleId":"649","severity":1,"message":"707","line":4,"column":81,"nodeType":"651","messageId":"652","endLine":4,"endColumn":90},{"ruleId":"649","severity":1,"message":"741","line":4,"column":186,"nodeType":"651","messageId":"652","endLine":4,"endColumn":200},{"ruleId":"649","severity":1,"message":"742","line":4,"column":203,"nodeType":"651","messageId":"652","endLine":4,"endColumn":217},{"ruleId":"649","severity":1,"message":"743","line":4,"column":219,"nodeType":"651","messageId":"652","endLine":4,"endColumn":229},{"ruleId":"649","severity":1,"message":"744","line":4,"column":231,"nodeType":"651","messageId":"652","endLine":4,"endColumn":240},{"ruleId":"682","severity":1,"message":"683","line":75,"column":9,"nodeType":"684","messageId":"685","endLine":75,"endColumn":17},{"ruleId":"682","severity":1,"message":"683","line":238,"column":7,"nodeType":"684","messageId":"685","endLine":238,"endColumn":15},{"ruleId":"673","severity":1,"message":"677","line":375,"column":34,"nodeType":"675","messageId":"676","endLine":375,"endColumn":36},{"ruleId":"673","severity":1,"message":"677","line":375,"column":49,"nodeType":"675","messageId":"676","endLine":375,"endColumn":51},{"ruleId":"692","severity":1,"message":"693","line":540,"column":16,"nodeType":"694","messageId":"695","endLine":540,"endColumn":43},{"ruleId":"669","severity":1,"message":"670","line":36,"column":7,"nodeType":"671","messageId":"672","endLine":56,"endColumn":8},{"ruleId":"673","severity":1,"message":"674","line":57,"column":109,"nodeType":"675","messageId":"676","endLine":57,"endColumn":111},{"ruleId":"673","severity":1,"message":"674","line":57,"column":144,"nodeType":"675","messageId":"676","endLine":57,"endColumn":146},{"ruleId":"673","severity":1,"message":"677","line":57,"column":144,"nodeType":"675","messageId":"676","endLine":57,"endColumn":146},{"ruleId":"673","severity":1,"message":"677","line":57,"column":205,"nodeType":"675","messageId":"676","endLine":57,"endColumn":207},"no-native-reassign",["745"],"no-negated-in-lhs",["746"],["745"],["746"],"no-unused-vars","'code' is assigned a value but never used.","Identifier","unusedVar","'code1' is assigned a value but never used.","'code2' is assigned a value but never used.","'code3' is assigned a value but never used.","'code4' is assigned a value but never used.","'code5' is assigned a value but never used.","'code6' is assigned a value but never used.","'code7' is assigned a value but never used.","'code8' is assigned a value but never used.","'code9' is assigned a value but never used.","'code10' is assigned a value but never used.","'babelParser' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"747","text":"748"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","Expected a 'break' statement before 'default'.","default","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'parse' is defined but never used.","'parseExpression' is defined but never used.","'PARAM_AWAIT' is defined but never used.","'SCOPE_PROGRAM' is defined but never used.","'paramFlags' is assigned a value but never used.","'SCOPE_DIRECT_SUPER' is defined but never used.","'SCOPE_SUPER' is defined but never used.","'PARAM_YIELD' is defined but never used.","'PARAM_RETURN' is defined but never used.","'PARAM_IN' is defined but never used.","'loneSurrogate' is defined but never used.","'lineBreak' is defined but never used.","'BIND_CLASS' is defined but never used.","'CLASS_ELEMENT_INSTANCE_SETTER' is defined but never used.","'CLASS_ELEMENT_STATIC_SETTER' is defined but never used.","'CLASS_ELEMENT_INSTANCE_GETTER' is defined but never used.","'CLASS_ELEMENT_STATIC_GETTER' is defined but never used.","'CLASS_ELEMENT_OTHER' is defined but never used.","'PARAM' is defined but never used.","'newExpressionScope' is defined but never used.","'SCOPE_CLASS' is defined but never used.","'BIND_FUNCTION' is defined but never used.","'newParameterDeclarationScope' is defined but never used.","'functionFlags' is defined but never used.","'SCOPE_FUNCTION' is defined but never used.","'FUNC_NULLABLE_ID' is defined but never used.","'FUNC_NO_FLAGS' is defined but never used.","'SCOPE_SIMPLE_CATCH' is defined but never used.","'switchLabel' is defined but never used.","'loopLabel' is defined but never used.","'SCOPE_OTHER' is defined but never used.","'FUNC_STATEMENT' is defined but never used.","'FUNC_HANGING_STATEMENT' is defined but never used.","'ExpressionErrors' is defined but never used.","'kMaybeAsyncArrowParameterDeclaration' is defined but never used.","'newAsyncArrowScope' is defined but never used.","'newArrowHeadScope' is defined but never used.","'SCOPE_ARROW' is defined but never used.","'BIND_OUTSIDE' is defined but never used.","'BIND_VAR' is defined but never used.","'ExpressionScope' is defined but never used.","'unwrapParenthesizedExpression' is defined but never used.","'isIdentifierChar' is defined but never used.","'types$1' is defined but never used.","'VALID_REGEX_FLAGS' is defined but never used.","'skipWhiteSpace' is defined but never used.","'SourceLocation' is defined but never used.","'lineBreakG' is defined but never used.","'isNewLine' is defined but never used.","no-global-assign","no-unsafe-negation",[0,13],""]